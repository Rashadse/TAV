<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.

chan freeLane, busyLane, outOfRange;

int streetLength = 10;
chan query;
int obstacleDistance;
int carDistance;</declaration><template><name x="5" y="5">Car</name><declaration>// Place local declarations here.
int distance;
int lane;
clock x;</declaration><location id="id0" x="40" y="-144"></location><location id="id1" x="24" y="-256"></location><location id="id2" x="-144" y="-144"></location><location id="id3" x="-288" y="-144"><name x="-362" y="-174">moveForward</name></location><location id="id4" x="-504" y="-144"></location><init ref="id4"/><transition><source ref="id2"/><target ref="id0"/><label kind="synchronisation" x="-88" y="-168">busyLane?</label><nail x="8" y="-144"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="synchronisation" x="-72" y="-240">freeLane?</label><nail x="-64" y="-256"/></transition><transition><source ref="id2"/><target ref="id4"/><nail x="-408" y="-16"/></transition><transition><source ref="id3"/><target ref="id2"/><label kind="synchronisation" x="-248" y="-144">query!</label></transition><transition><source ref="id4"/><target ref="id3"/><label kind="guard" x="-456" y="-174">x == 5</label><label kind="assignment" x="-456" y="-144">x = 0</label></transition></template><template><name>ObstacleCar</name><declaration>clock time;
int speed = 5;</declaration><location id="id5" x="248" y="0"><committed/></location><location id="id6" x="0" y="0"></location><init ref="id6"/><transition><source ref="id5"/><target ref="id6"/><label kind="assignment" x="152" y="-104">time = 0</label><nail x="128" y="-96"/></transition><transition><source ref="id6"/><target ref="id5"/><label kind="guard" x="168" y="72">time == speed</label><label kind="assignment" x="152" y="88">obstacleDistance++</label><nail x="128" y="104"/></transition></template><template><name>RadarSensor</name><location id="id7" x="-376" y="16"></location><location id="id8" x="-136" y="16"></location><init ref="id7"/><transition><source ref="id8"/><target ref="id8"/><label kind="guard" x="-24" y="-32">obstacleDistance != carDistance</label><label kind="synchronisation" x="-24" y="-16">freeLane!</label><nail x="-32" y="-32"/><nail x="-32" y="48"/></transition><transition><source ref="id8"/><target ref="id8"/><label kind="guard" x="-40" y="72">obstacleDistance == -1</label><label kind="synchronisation" x="-56" y="88">outOfRange!</label><nail x="-40" y="64"/><nail x="-88" y="120"/></transition><transition><source ref="id8"/><target ref="id8"/><label kind="guard" x="-320" y="-120">obstacleDistance == carDistance</label><label kind="synchronisation" x="-208" y="-104">busyLane!</label><nail x="-88" y="-112"/><nail x="-32" y="-56"/></transition><transition><source ref="id7"/><target ref="id8"/><label kind="synchronisation" x="-264" y="16">query?</label></transition></template><template><name>LidarSensor</name><location id="id9" x="0" y="0"></location><init ref="id9"/></template><template><name>Street</name><parameter>const int lanes, const int length, const int cars</parameter><location id="id10" x="0" y="0"></location><init ref="id10"/></template><system>// Place template instantiations here.
obstacle = ObstacleCar();

// List one or more processes to be composed into a system.
system obstacle, RadarSensor, Car;</system></nta>